/*#include <stdio.h>

int main()
{
    int k = 3; //haven't put actual thing to be encrypted and decryted in yet. have it waiting and ready for when i figure out what the hell im doing
    
    e(m) = (m + k)(%26);
    
    d(c) = (c - k)(%26);

    return 0;
}

#include <stdio.h>

int main()
{
int i, x;
    //int k = 3; 
    char str[26];
    
    printf("\nPlease enter a string:\t");
    gets(str);
    
    for(i = 0; (i < 100 && str[i] != '\0'); i++)
        str[i] = str[i] + 3; 
        
        printf("\nEncrypted string: %s\n", str);
    
    //e(m) = (m + k)(%26);
    
    //d(c) = (c - k)(%26);

    return 0;
}*/
#include <stdio.h>

int main()
{
   int i, x;
   char str[26];

   printf("\nPlease enter a string:\t");
   gets(str);

   printf("\nPlease choose following options:\n");
   printf("1 = Encrypt the string.\n");
   printf("2 = Decrypt the string.\n");
   scanf("%d", &x);

   //using switch case statements
   switch(x)
   {
   case 1:
      for(i = 0; (i < 26 && str[i] != '\0'); i++)
        str[i] = str[i] + 3; //the key for encryption is 3 that is added to ASCII value

      printf("\nEncrypted string: %s\n", str);
      break;

   case 2:
      for(i = 0; (i < 26 && str[i] != '\0'); i++)
        str[i] = str[i] - 3; //the key for encryption is 3 that is subtracted to ASCII value

      printf("\nDecrypted string: %s\n", str);
      break;

   default:
      printf("\nError\n");
   }
   return 0;
} //This currently works in online gdb
